Состояние проекта:

26 ноября 2021  
Сейчас это очень сырой код.
- Код написан только для класса и суперкласса или только для класса.
Более длинную ветвь нельзя указать.
- Агрегированные классы могут указываться только для последнего класса.
- Все отклонения от этого формата приводят к невозможности распарсить выражение.
- Формат выражения не проверяется.
- Код написан, исходя из того, что у каждого класса может быть несколько суперклассов.
  И вот они-то и записаны в словарь суперклассов. 
  Обычно он содержит ноль или один элемент - родительский класс, если он указан в записи.
  И эта штука предполагает что где-то есть общее дерево классов, из которого все эти классы можно найти по их уникальному имени.
  Так вот это такая непродуманная до конца конструкция, и я сейчас не знаю, как ее сделать даже.
  И во что переделать.  
Надо же так:
- каждый класс в цепочке абстракции может содержать запись агрегированных членов (<..>)
  - но классы внутри записи агрегации (между <>)не могут содержать агрегированные члены? Или могут?
- цепочка абстракции может содержать как минимум один класс и более.
- цепочка агрегации может содержать ноль классов и более, или может отсутствовать. 
- Вообще, почему класс EntityType содержит коллекцию объектов надклассов, а не подклассов?
  - не помню, почему я так выбрал.
  - дерево строить так неудобно, и передвигаться по нему так неудобно.
  - так можно передвигаться от листьев к корню, а большего мне в приложениях и не требовалось, вроде бы.
  - на первый взгляд, никаких проблем не будет, если класс EntityType будет содержит коллекцию ссылок-объектов подклассов, а не надклассов.
    Дерево строить будет удобнее, передвигаться по нему удобнее.

1 декабря 2021
Новый список требований для этих классов:
- Класс EntityTypeExpression должен представлять запись типа, состоящую из цепочки классов. И предоставлять средства для работы с ними.
  Это нужно для представления типа Сущности Хранилища в объекте Сущности.
- Класс EntityTypesCollection должен представлять список или массив объектов EntityType. И использоваться для построения дерева классов.
  Подобного тому что уже есть в Материалы-StorageSearcher, но более детального и не в TreeView.
- Класс EntityTypesCollection может использоваться внутри EntityType для хранения списка надклассов абстракции и списка подклассов агрегации.
  Он должен иметь соответствующие функции для этого применения.
- Надо лучше проработать эту систему обозначения.
- Надо больше примеров. 
- Надо опыт использования.
- Операторы < > = можно ли использовать в иерархии? 
  - только внутри одной ветви классов. Соседняя ветвь уже не может так сравниваться.

6 декабря 2021
- Выявлены пробелы в концепции, описаны в Todo.txt.
- Есть новые задачи там же.
- Надо писать автомат состояний для разбора выражения классов. Прежний код был для простых случаев и узкого применения.
  А тут нужен более надежный и более универсальный способ на все случаи.
  

      